2023-03-29 13:25:02 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-JJNK2Q2 with PID 7544 (C:\Spring Boot projects\microservices-demo\twitter-to-kafka-service\target\classes started by Daiana in C:\Spring Boot projects\microservices-demo\twitter-to-kafka-service)
2023-03-29 13:25:02 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-03-29 13:25:03 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-29 13:25:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-03-29 13:25:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-03-29 13:25:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680085503679
2023-03-29 13:25:04 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-03-29 13:25:04 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 2.251 seconds (JVM running for 2.736)
2023-03-29 13:25:04 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App starts...
2023-03-29 13:25:04 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Creating 1 topic(s), attempts 0
2023-03-29 13:25:04 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2023-03-29 13:25:04 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2023-03-29 13:25:04 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-03-29 13:25:04 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering mock streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-03-29 13:25:04 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 111
2023-03-29 13:25:04 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 13:25:04 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 13:25:04 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status text amet amet Fusce sed pulvinar dolor Java massa massa Lorem adipiscing purus sending to kafka topic twitter-topic
2023-03-29 13:25:04 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 621024140277576951, "id": 3844170686589694906, "text": "amet amet Fusce sed pulvinar dolor Java massa massa Lorem adipiscing purus", "createdAt": 1680085504000}' to topic='twitter-topic'
2023-03-29 13:41:53 [SpringContextShutdownHook] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Closing kafka producer!
2023-03-29 14:08:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-JJNK2Q2 with PID 11660 (C:\Spring Boot projects\microservices-demo\twitter-to-kafka-service\target\classes started by Daiana in C:\Spring Boot projects\microservices-demo\twitter-to-kafka-service)
2023-03-29 14:08:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-03-29 14:08:09 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-29 14:08:09 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-03-29 14:08:09 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-03-29 14:08:09 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680088089553
2023-03-29 14:08:10 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-03-29 14:08:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 1.865 seconds (JVM running for 2.298)
2023-03-29 14:08:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App starts...
2023-03-29 14:08:10 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Creating 1 topic(s), attempts 0
2023-03-29 14:08:10 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2023-03-29 14:08:10 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2023-03-29 14:08:10 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-03-29 14:08:10 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-03-29 14:08:10 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 111
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text Fusce consectetuer posuere amet sit porttitor Maecenas adipiscing Spring ipsum sit Lorem Maecenas lectus pulvinar elit sending to kafka topic twitter-topic
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 3830392798066299042, "id": 8597203163667065559, "text": "Fusce consectetuer posuere amet sit porttitor Maecenas adipiscing Spring ipsum sit Lorem Maecenas lectus pulvinar elit", "createdAt": 1680088090000}' to topic='twitter-topic'
2023-03-29 14:08:10 [pool-1-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-03-29 14:08:10 [pool-1-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-03-29 14:08:10 [pool-1-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-03-29 14:08:10 [pool-1-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-03-29 14:08:10 [pool-1-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-03-29 14:08:10 [pool-1-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680088090562
2023-03-29 14:08:10 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: hWOTZylESimA2_M3ibLiVw
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:08:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit posuere purus purus Spring posuere purus sending to kafka topic twitter-topic
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 3502339176513572152, "id": 1864958793628266664, "text": "elit posuere purus purus Spring posuere purus", "createdAt": 1680088100000}' to topic='twitter-topic'
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:08:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text malesuada lectus ipsum ultricies ipsum purus elit Spring amet Maecenas sed libero posuere sed sending to kafka topic twitter-topic
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 5127124296408249692, "id": 1031313180852127975, "text": "malesuada lectus ipsum ultricies ipsum purus elit Spring amet Maecenas sed libero posuere sed", "createdAt": 1680088110000}' to topic='twitter-topic'
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:08:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit Lorem congue ultricies Elasticsearch elit purus elit sending to kafka topic twitter-topic
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 4373054975820160456, "id": 7822621631290793673, "text": "elit Lorem congue ultricies Elasticsearch elit purus elit", "createdAt": 1680088120000}' to topic='twitter-topic'
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:08:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text purus purus porttitor Spring posuere libero sending to kafka topic twitter-topic
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 2487632966065028657, "id": 4483157984755525963, "text": "purus purus porttitor Spring posuere libero", "createdAt": 1680088130000}' to topic='twitter-topic'
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:08:50 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetuer consectetuer lectus consectetuer ipsum massa malesuada Microservices ipsum Lorem dolor libero congue sending to kafka topic twitter-topic
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 5349558189349482201, "id": 1965406563464765991, "text": "consectetuer consectetuer lectus consectetuer ipsum massa malesuada Microservices ipsum Lorem dolor libero congue", "createdAt": 1680088140000}' to topic='twitter-topic'
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:09:00 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text purus Lorem lectus amet Maecenas lectus ipsum Spring ipsum adipiscing purus dolor libero massa sending to kafka topic twitter-topic
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 1484668127214669242, "id": 8897270841755946573, "text": "purus Lorem lectus amet Maecenas lectus ipsum Spring ipsum adipiscing purus dolor libero massa", "createdAt": 1680088150000}' to topic='twitter-topic'
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:09:10 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text Fusce elit elit elit amet Java porttitor posuere porttitor ultricies sending to kafka topic twitter-topic
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 830634563722877802, "id": 5789074076231188975, "text": "Fusce elit elit elit amet Java porttitor posuere porttitor ultricies", "createdAt": 1680088160000}' to topic='twitter-topic'
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:09:20 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text massa congue Fusce dolor malesuada Lorem Lorem posuere Spring adipiscing Lorem Lorem massa amet consectetuer sending to kafka topic twitter-topic
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 7274693255972666410, "id": 6869482381828279007, "text": "massa congue Fusce dolor malesuada Lorem Lorem posuere Spring adipiscing Lorem Lorem massa amet consectetuer", "createdAt": 1680088170000}' to topic='twitter-topic'
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:09:30 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> inside while ----------->>>
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 222
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit malesuada elit libero Java ultricies congue sending to kafka topic twitter-topic
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Sending message='{"userId": 6676725299641482485, "id": 8093723493327650634, "text": "elit malesuada elit libero Java ultricies congue", "createdAt": 1680088180000}' to topic='twitter-topic'
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 666
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - ---------->>> Here 777
2023-03-29 14:09:40 [pool-1-thread-1] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - ----->>> Here 333
2023-03-29 14:09:42 [SpringContextShutdownHook] INFO  c.m.d.k.p.s.i.TwitterKafkaProducer - Closing kafka producer!
2023-03-29 14:09:42 [SpringContextShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
